{"version":3,"sources":["components/TodoTextInput.js","components/SyncSwitch.js","components/Header.js","constants/ActionTypes.js","actions/index.js","containers/Header.js","components/Link.js","containers/FilterLink.js","constants/TodoFilters.js","components/Footer.js","components/TodoItem.js","components/TodoList.js","selectors/index.js","containers/VisibleTodoList.js","components/MainSection.js","containers/MainSection.js","components/App.js","reducers/todos.js","reducers/visibilityFilter.js","../../src/recursive-diff.types.ts","../../src/utils.ts","../../src/toSharedType.ts","../../src/patchYjs.ts","reducers/index.js","../../src/index.ts","../../src/patchRedux.ts","YjsWebRTCProvider.js","index.js"],"names":["TodoTextInput","state","text","props","handleSubmit","e","target","value","trim","which","onSave","newTodo","setState","handleChange","handleBlur","className","classnames","edit","this","editing","type","placeholder","autoFocus","onBlur","onChange","onKeyDown","Component","buttonStyle","position","padding","transform","background","boxShadow","borderRadius","fontWeight","SyncSwitch","useState","rtc","connected","setConnected","style","onClick","disconnect","connect","Header","addTodo","top","width","textAlign","href","length","ADD_TODO","DELETE_TODO","EDIT_TODO","COMPLETE_TODO","COMPLETE_ALL_TODOS","CLEAR_COMPLETED","SET_VISIBILITY_FILTER","types","deleteTodo","id","editTodo","completeTodo","completeAllTodos","clearCompleted","setVisibilityFilter","filter","Link","active","children","setFilter","selected","cursor","ownProps","visibilityFilter","dispatch","SHOW_ALL","SHOW_COMPLETED","SHOW_ACTIVE","FILTER_TITLES","Footer","activeCount","completedCount","onClearCompleted","itemWord","Object","keys","map","FilterLink","TodoItem","handleDoubleClick","handleSave","element","todo","checked","completed","onDoubleClick","TodoList","filteredTodos","actions","sort","a","b","createdAt","getTodos","values","todos","getVisibleTodos","createSelector","t","Error","getCompletedTodoCount","reduce","count","VisibleTodoList","bindActionCreators","TodoActions","MainSection","todosCount","readOnly","App","initialState","initialTodo","RecursiveDiffResultOperation","action","isObject","val","prototype","toString","call","isArray","Array","isString","String","isInteger","Number","toSharedType","yArray","YArray","yValues","v","push","yMap","YMap","entries","forEach","set","traversePath","yType","operation","path","property","Add","Update","yValue","insert","Delete","clampedIndex","u","currentSegment","restPath","nextType","get","console","warn","patchYjs","rootMap","sliceName","getDiff","op","rootReducer","combineReducers","currentReducer","payload","enhanceReducer","uuid","Date","getTime","rest","areAllMarked","every","fromEntries","RTC","yDoc","window","localStorage","getItem","provider","WebrtcProvider","signaling","setItem","YDoc","store","createStore","reducer","__REDUX_DEVTOOLS_EXTENSION__","getMap","getState","transact","currentlyPatchingYjs","currentlyPatchingStore","currentState","reduxUnsubscribe","subscribe","prevState","handleYjsStoreChange","toJSON","observeDeep","bind","render","document","getElementById"],"mappings":"4lBAIqBA,E,4MASnBC,MAAQ,CACNC,KAAM,EAAKC,MAAMD,MAAQ,I,EAG3BE,aAAe,SAACC,GACd,IAAMH,EAAOG,EAAEC,OAAOC,MAAMC,OACZ,KAAZH,EAAEI,QACJ,EAAKN,MAAMO,OAAOR,GACd,EAAKC,MAAMQ,SACb,EAAKC,SAAS,CAAEV,KAAM,O,EAK5BW,aAAe,SAACR,GACd,EAAKO,SAAS,CAAEV,KAAMG,EAAEC,OAAOC,S,EAGjCO,WAAa,SAACT,GACP,EAAKF,MAAMQ,SACd,EAAKR,MAAMO,OAAOL,EAAEC,OAAOC,Q,4CAI/B,WACE,OACE,uBACEQ,UAAWC,IAAW,CACpBC,KAAMC,KAAKf,MAAMgB,QACjB,WAAYD,KAAKf,MAAMQ,UAEzBS,KAAK,OACLC,YAAaH,KAAKf,MAAMkB,YACxBC,WAAW,EACXf,MAAOW,KAAKjB,MAAMC,KAClBqB,OAAQL,KAAKJ,WACbU,SAAUN,KAAKL,aACfY,UAAWP,KAAKd,mB,GA9CmBsB,a,QCDrCC,EAAc,CAClBC,SAAU,WACVC,QAAS,cACTC,UAAW,iCACXC,WAAY,OACZC,UAAW,+BACXC,aAAc,MACdC,WAAY,KAmBCC,EAhBI,WACjB,MAAkCC,mBAASC,GAAIC,WAA/C,mBAAOA,EAAP,KAAkBC,EAAlB,KAEA,OACE,wBACEC,MAAOb,EACPc,QAAS,WACPH,EAAYD,GAAIK,aAAeL,GAAIM,UACnCJ,GAAcD,IAJlB,SAOGA,EAAY,eAAiB,iBCcrBM,EAjCA,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACb,yBAAQ9B,UAAU,SAAlB,UACE,uCACA,wBACEyB,MAAO,CACLZ,SAAU,WACVkB,IAAK,QACLC,MAAO,OACPC,UAAW,UALf,qBAQW,IACT,mBAAGC,KAAM,gEAAT,8EAIF,cAAC,EAAD,IACA,cAAC,EAAD,CACEtC,SAAO,EACPD,OAAQ,SAACR,GACa,IAAhBA,EAAKgD,QACPL,EAAQ3C,IAGZmB,YAAY,+BC7BL8B,EAAW,WACXC,EAAc,cACdC,EAAY,YACZC,EAAgB,gBAChBC,EAAqB,qBACrBC,EAAkB,kBAClBC,EAAwB,wBCJxBZ,EAAU,SAAC3C,GAAD,MAAW,CAAEkB,KAAMsC,EAAgBxD,SAC7CyD,EAAa,SAACC,GAAD,MAAS,CAAExC,KAAMsC,EAAmBE,OACjDC,EAAW,SAACD,EAAI1D,GAAL,MAAe,CAAEkB,KAAMsC,EAAiBE,KAAI1D,SACvD4D,EAAe,SAACF,GAAD,MAAS,CAAExC,KAAMsC,EAAqBE,OACrDG,EAAmB,iBAAO,CAAE3C,KAAMsC,IAClCM,EAAiB,iBAAO,CAAE5C,KAAMsC,IAChCO,EAAsB,SAACC,GAAD,MAAa,CAAE9C,KAAMsC,EAA6BQ,WCJtEvB,cAAQ,KAAM,CAAEE,WAAhBF,CAA2BC,G,OCiB3BuB,EAjBF,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,SAAUC,EAArB,EAAqBA,UAArB,OAEX,aADA,CACA,KACEvD,UAAWC,IAAW,CAAEuD,SAAUH,IAClC5B,MAAO,CAAEgC,OAAQ,WACjB/B,QAAS,kBAAM6B,KAHjB,SAKGD,KCGU1B,eAVS,SAAC1C,EAAOwE,GAAR,MAAsB,CAC5CL,OAAQK,EAASP,SAAWjE,EAAMyE,qBAGT,SAACC,EAAUF,GAAX,MAAyB,CAClDH,UAAW,WACTK,EAASV,EAAoBQ,EAASP,aAI3BvB,CAA6CwB,GCd/CS,EAAW,WACXC,EAAiB,iBACjBC,EAAc,cCGrBC,GAAa,mBAChBH,EAAW,OADK,cAEhBE,EAAc,UAFE,cAGhBD,EAAiB,aAHD,GAoCJG,EA9BA,SAAC7E,GACd,IAAQ8E,EAAkD9E,EAAlD8E,YAAaC,EAAqC/E,EAArC+E,eAAgBC,EAAqBhF,EAArBgF,iBAC/BC,EAA2B,IAAhBH,EAAoB,OAAS,QAC9C,OACE,yBAAQlE,UAAU,SAAlB,UACE,uBAAMA,UAAU,aAAhB,UACE,iCAASkE,GAAe,OAD1B,IAC0CG,EAD1C,WAGA,oBAAIrE,UAAU,UAAd,SACGsE,OAAOC,KAAKP,GAAeQ,KAAI,SAACrB,GAAD,OAC9B,6BACE,cAACsB,EAAD,CAAYtB,OAAQA,EAApB,SAA6Ba,EAAcb,MADpCA,UAKVgB,GACD,wBAAQnE,UAAU,kBAAkB0B,QAAS0C,EAA7C,iC,QCtBaM,E,4MAQnBxF,MAAQ,CACNkB,SAAS,G,EAGXuE,kBAAoB,WAClB,EAAK9E,SAAS,CAAEO,SAAS,K,EAG3BwE,WAAa,SAAC/B,EAAI1D,GACI,IAAhBA,EAAKgD,OACP,EAAK/C,MAAMwD,WAAWC,GAEtB,EAAKzD,MAAM0D,SAASD,EAAI1D,GAE1B,EAAKU,SAAS,CAAEO,SAAS,K,4CAG3B,WAAU,IAGJyE,EAHG,OACP,EAA2C1E,KAAKf,MAAxC0F,EAAR,EAAQA,KAAM/B,EAAd,EAAcA,aAAcH,EAA5B,EAA4BA,WA0B5B,OAtBEiC,EADE1E,KAAKjB,MAAMkB,QAEX,cAAC,EAAD,CACEjB,KAAM2F,EAAK3F,KACXiB,QAASD,KAAKjB,MAAMkB,QACpBT,OAAQ,SAACR,GAAD,OAAU,EAAKyF,WAAWE,EAAKjC,GAAI1D,MAK7C,sBAAKa,UAAU,OAAf,UACE,uBACEA,UAAU,SACVK,KAAK,WACL0E,QAASD,EAAKE,UACdvE,SAAU,kBAAMsC,EAAa+B,EAAKjC,OAEpC,uBAAOoC,cAAe9E,KAAKwE,kBAA3B,SAA+CG,EAAK3F,OACpD,wBAAQa,UAAU,UAAU0B,QAAS,kBAAMkB,EAAWkC,EAAKjC,UAM/D,oBACE7C,UAAWC,IAAW,CACpB+E,UAAWF,EAAKE,UAChB5E,QAASD,KAAKjB,MAAMkB,UAHxB,SAMGyE,Q,GA3D6BlE,aCoBvBuE,EArBE,SAAC,GAAD,IAAGC,EAAH,EAAGA,cAAeC,EAAlB,EAAkBA,QAAlB,OACf,oBAAIpF,UAAU,YAAd,SACGmF,EACEE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,UAAYD,EAAEC,aAC/BhB,KAAI,SAACM,GAAD,OACH,cAAC,EAAD,aAAwBA,KAAMA,GAAUM,GAAzBN,EAAKjC,U,QCLtB4C,EAAW,SAACvG,GAAD,OAAWoF,OAAOoB,OAAOxG,EAAMyG,QAEnCC,EAAkBC,YAC7B,CAJ0B,SAAC3G,GAAD,OAAWA,EAAMyE,kBAIrB8B,IACtB,SAAC9B,EAAkBgC,GACjB,OAAQhC,GACN,KAAKE,EACH,OAAO8B,EACT,KAAK7B,EACH,OAAO6B,EAAMxC,QAAO,SAAC2C,GAAD,OAAOA,EAAEd,aAC/B,KAAKjB,EACH,OAAO4B,EAAMxC,QAAO,SAAC2C,GAAD,OAAQA,EAAEd,aAChC,QACE,MAAM,IAAIe,MAAM,mBAAqBpC,OAKhCqC,EAAwBH,YAAe,CAACJ,IAAW,SAACE,GAAD,OAC9DA,EAAMM,QAAO,SAACC,EAAOpB,GAAR,OAAkBA,EAAKE,UAAYkB,EAAQ,EAAIA,IAAQ,MCPvDC,EAFSvE,aARA,SAAC1C,GAAD,MAAY,CAClCiG,cAAeS,EAAgB1G,OAGN,SAAC0E,GAAD,MAAe,CACxCwB,QAASgB,YAAmBC,EAAazC,MAGnBhC,CAA6CsD,GCqBtDoB,EA9BK,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYpC,EAAf,EAAeA,eAAgBiB,EAA/B,EAA+BA,QAA/B,OAClB,0BAASpF,UAAU,OAAnB,YACKuG,GACD,iCACE,uBACEvG,UAAU,aACVK,KAAK,WACL0E,QAASZ,IAAmBoC,EAC5BC,UAAQ,IAEV,uBAAO9E,QAAS0D,EAAQpC,sBAG5B,cAAC,EAAD,MACGuD,GACD,cAAC,EAAD,CACEpC,eAAgBA,EAChBD,YAAaqC,EAAapC,EAC1BC,iBAAkBgB,EAAQnC,qBCRnBrB,eATS,SAAC1C,GAAD,MAAY,CAClCqH,WAAYjC,OAAOC,KAAKrF,EAAMyG,OAAOxD,OACrCgC,eAAgB6B,EAAsB9G,OAGb,SAAC0E,GAAD,MAAe,CACxCwB,QAASgB,YAAmBC,EAAazC,MAG5BhC,CAA6C0E,GCJ7CG,GAPH,kBACV,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,Q,2BCGEC,GAAe,CACnBC,YAAa,CACX9D,GAAI,cACJ1D,KAAM,YACN6F,WAAW,EACXQ,UAAW,SCZf,ICDYoB,MDUGjD,GATU,WAA+B,IAA9BzE,EAA6B,uDAArB2E,EAAUgD,EAAW,uCACrD,OAAQA,EAAOxG,OACRqC,EACImE,EAAO1D,OAEPjE,G,kBENA4H,GAAW,SAACC,SACiB,oBAAxCzC,OAAO0C,UAAUC,SAASC,KAAKH,IAEpBI,GAAU,SAACJ,UAAwCK,MAAMD,QAAQJ,IAEjEM,GAAW,SAACN,SACR,iBAARA,GAAoBA,aAAeO,QAE/BC,GAAY,SAACR,UAAgCS,OAAOD,UAAUR,ICN9DU,GAAe,SAAfA,EAAiCV,GAC5C,GAAII,GAAQJ,GAAM,CAChB,IAAMW,EAAS,IAAIC,KAEbC,EAAUb,EAAIvC,KAAI,SAACqD,UAAMJ,EAAaI,MAG5C,OAFAH,EAAOI,KAAKF,GAELF,KACEZ,GAASC,GAAM,CACxB,IAAMgB,EAAO,IAAIC,KAMjB,OAJA1D,OAAO2D,QAAQlB,GAAKmB,SAAQ,YAC1BH,EAAKI,SAASV,YAGTM,EAEP,OAAOhB,IFnBCH,gBACVA,UACAA,mBACAA,mBGEF,I,MAsCMwB,GAAe,SAAfA,EACJC,EACAC,EACAC,EACA/I,GAEA,GAAoB,IAAhB+I,EAAKpG,OACP,MAAM,IAAI4D,MAAM,kCAGlB,GAAoB,IAAhBwC,EAAKpG,QAhDQ,SACjBkG,EACAC,EACAE,EACAhJ,GAEA,GACE8I,IAAc1B,GAA6B6B,KAC3CH,IAAc1B,GAA6B8B,OAC3C,CACA,IAAMC,EAASlB,GAAajI,GAE5B,GAAI6I,aAAiBV,MAAUJ,GAAUiB,GACnCF,IAAc1B,GAA6B8B,QAAQL,SAAaG,GAEpEH,EAAMO,OAAOJ,EAAU,CAACG,cACfN,aAAiBL,MAAQX,GAASmB,IAG3C,MAAM,IAAIzC,MAAM,6DAFhBsC,EAAMF,IAAIK,EAAUG,YAIbL,IAAc1B,GAA6BiC,OACpD,GAAIR,aAAiBV,MAAUJ,GAAUiB,GAAW,CAKlD,IAAMM,GFlCgCC,EEkCEV,EAAMlG,OAAS,GFlCvC0F,EEkCWW,GAAU,IFlC4BX,EAAIkB,EAAIA,EAAIlB,GEmC7EQ,SAAaS,aACJT,aAAiBL,MAAQX,GAASmB,IAG3C,MAAM,IAAIzC,MAAM,6DAFhBsC,SAAaG,GFrCE,IAACX,EAAsBkB,EEOzB,CAiDJV,EAAOC,EAAWC,EAAK,GAAI/I,OACjC,CACL,IAAOwJ,EAA+BT,KAAZU,EAAYV,WAEtC,GAAIF,aAAiBV,KAAQ,CAC3B,IAAKJ,GAAUyB,GACb,MAAM,IAAIjD,MAAM,oBAGlB,IAAMmD,EAAWb,EAAMc,IAAIH,GAG3B,KAAME,aAAoBlB,MAAQkB,aAAoBvB,MACpD,MAAM,IAAI5B,MAAM,oBAGlBqC,EAAac,EAAUZ,EAAWW,EAAUzJ,WACnC6I,aAAiBL,KAAM,CAChC,IAAKX,GAAS2B,GACZ,MAAM,IAAIjD,MAAM,oBAGlB,IAAMmD,EAAWb,EAAMc,IAAIH,GAG3B,KAAME,aAAoBlB,MAAQkB,aAAoBvB,MACpD,MAAM,IAAI5B,MAAM,oBAGlBqC,EAAac,EAAUZ,EAAWW,EAAUzJ,QAE5C4J,QAAQC,KAAK,2CAA4ChB,KAYlDiB,GAAW,SAACC,EAAwBC,EAAmBlE,EAAYC,GAEjEkE,mBAAQnE,EAAGC,GAanB2C,SAAQ,gBAAanB,QAExBqB,GAAamB,IAFCG,IAEaF,YAFTjB,MAEgC,IAAMxB,OC/GtD4C,GAAcC,YAAgB,CAClCjE,MCuEA,SAAIkE,mBACH3K,EAAO2H,GACN,MC3EqC,gCD2EjCA,WAAQxG,eACHwG,EAAOiD,QAAwB5K,EAAQ2H,EAAOiD,QAE9CD,EAAe3K,EAAO2H,ID5E1BkD,ENaM,WAA8C,IAA/B7K,EAA8B,uDAAtBwH,GAAcG,EAAQ,uCAC1D,OAAQA,EAAOxG,MACb,KAAK+B,EACH,IAAMS,EAAKmH,eACX,OAAO,2BACF9K,GADL,kBAEG2D,EAAK,CACJA,KACA2C,WAAW,IAAIyE,MAAOC,UACtBlF,WAAW,EACX7F,KAAM0H,EAAO1H,QAKnB,KAAKkD,EACH,MAASwE,EAAOhE,GAAWsH,GAASjL,EAApC,gBAAoCA,EAApC,gBACA,OAAOiL,EAGT,KAAK7H,EACH,IAAMwC,EAAO5F,EAAM2H,EAAOhE,IAE1B,OAAO,2BACF3D,GADL,kBAEG2H,EAAOhE,GAFV,2BAEoBiC,GAFpB,IAE0B3F,KAAM0H,EAAO1H,SAIzC,KAAKoD,EACH,IAAMuC,EAAO5F,EAAM2H,EAAOhE,IAE1B,OAAO,2BACF3D,GADL,kBAEG2H,EAAOhE,GAFV,2BAEoBiC,GAFpB,IAE0BE,WAAYF,EAAKE,cAI7C,KAAKxC,EACH,IAAM4H,EAAe9F,OAAOoB,OAAOxG,GAAOmL,OAAM,SAACvF,GAAD,OAAUA,EAAKE,aAE/D,OAAOV,OAAOgG,YACZhG,OAAO2D,QAAQ/I,GAAOsF,KAAI,YAAiB,IAAD,mBAAd3B,EAAc,KAAViC,EAAU,KACxC,MAAO,CAACjC,EAAD,2BAAUiC,GAAV,IAAgBE,WAAYoF,SAKzC,KAAK3H,EACH,OAAO6B,OAAOgG,YACZhG,OAAO2D,QAAQ/I,GAAOiE,QAAO,mBAAiC,IAAjC,oBAAmB6B,cAIpD,QACE,OAAO9F,MMnEXyE,sBAGagG,M,iBGRFY,GAAb,WAIE,WAAYC,GAAO,yBAFnBjJ,WAAY,EAGVpB,KAAKqK,KAAOA,EAGQ,UADAC,OAAOC,aAAaC,QAAQ,mBAE9CxK,KAAKyB,UATX,2CAaE,WACMzB,KAAKyK,SACPzK,KAAKyK,SAAShJ,UAGdzB,KAAKyK,SAAW,IAAIC,KAAe,qBAAsB1K,KAAKqK,KAAM,CAClEM,UAGM,CAAC,0BAA2B,+CAItCL,OAAOC,aAAaK,QAAQ,iBAAkB,QAC9C5K,KAAKoB,WAAY,IA3BrB,wBA8BE,WACMpB,KAAKyK,UACPzK,KAAKyK,SAASjJ,aAGhB8I,OAAOC,aAAaK,QAAQ,iBAAkB,SAC9C5K,KAAKoB,WAAY,MApCrB,KCSaiJ,GAAO,IAAIQ,KACX1J,GAAM,IAAIiJ,GAAIC,IAErBS,GAAQC,YAAYC,GAAD,YAAU,GAAAV,QAAOW,oCAAjB,cAAU,cHIf,SAClBZ,EACAS,EACAzB,GAEA,IAAMD,EAAUiB,EAAKa,OAbM,6BAcrBnM,EAAQ+L,EAAMK,WAAW9B,GAG3B1C,GAAS5H,IACXqM,aAASf,GAAM,WACbjB,EAAQpB,IAAIqB,EAAW/B,GAAa,KACpC6B,GAASC,EAASC,EAAW,GAAItK,MAIjCiI,GAAQjI,IACVqM,aAASf,GAAM,WACbjB,EAAQpB,IAAIqB,EAAW/B,GAAa,KACpC6B,GAASC,EAASC,EAAW,GAAItK,MAKrC,IAAIsM,KACAC,KAEAC,EAAeT,EAAMK,WAAW9B,GAC9BmC,EAAmBV,EAAMW,WAAU,WACvC,IAAMC,EAAYH,EAClBA,EAAeT,EAAMK,WAAW9B,GAE5BiC,IAEJD,KACAD,aAASf,GAAM,WACblB,GAASC,EAASC,EAAWqC,EAAWH,MAE1CF,SAGIM,EAAuB,WACvBN,IAEJC,KCnDsB,SAACR,EAAc1B,EAAwBC,GAC/DyB,EAAMrH,SAN8C,CACpDvD,KAHuC,uBAIvCyJ,QAI8BP,EAAQwC,SAASvC,KADvB,CDoDXyB,EAAO1B,EAASC,GAC3BiC,OAGFlC,EAAQyC,YAAYF,GGnDtBG,CAAKzB,GAAMS,GAAO,SAElBiB,iBACE,cAAC,IAAD,CAAUjB,MAAOA,GAAjB,SACE,cAAC,GAAD,MAEFkB,SAASC,eAAe,W","file":"static/js/main.d4bf6196.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nexport default class TodoTextInput extends Component {\n  static propTypes = {\n    onSave: PropTypes.func.isRequired,\n    text: PropTypes.string,\n    placeholder: PropTypes.string,\n    editing: PropTypes.bool,\n    newTodo: PropTypes.bool,\n  };\n\n  state = {\n    text: this.props.text || '',\n  };\n\n  handleSubmit = (e) => {\n    const text = e.target.value.trim();\n    if (e.which === 13) {\n      this.props.onSave(text);\n      if (this.props.newTodo) {\n        this.setState({ text: '' });\n      }\n    }\n  };\n\n  handleChange = (e) => {\n    this.setState({ text: e.target.value });\n  };\n\n  handleBlur = (e) => {\n    if (!this.props.newTodo) {\n      this.props.onSave(e.target.value);\n    }\n  };\n\n  render() {\n    return (\n      <input\n        className={classnames({\n          edit: this.props.editing,\n          'new-todo': this.props.newTodo,\n        })}\n        type=\"text\"\n        placeholder={this.props.placeholder}\n        autoFocus={true}\n        value={this.state.text}\n        onBlur={this.handleBlur}\n        onChange={this.handleChange}\n        onKeyDown={this.handleSubmit}\n      />\n    );\n  }\n}\n","import React, { useState } from 'react';\nimport { rtc } from '../index';\n\nconst buttonStyle = {\n  position: 'absolute',\n  padding: '0.5rem 1rem',\n  transform: 'translateX(calc(-100% - 1rem))',\n  background: '#fff',\n  boxShadow: '0 3px 6px rgba(0, 0, 0, 0.1)',\n  borderRadius: '3px',\n  fontWeight: 500,\n};\n\nconst SyncSwitch = () => {\n  const [connected, setConnected] = useState(rtc.connected);\n\n  return (\n    <button\n      style={buttonStyle}\n      onClick={() => {\n        connected ? rtc.disconnect() : rtc.connect();\n        setConnected(!connected);\n      }}\n    >\n      {connected ? 'Disable Sync' : 'Enable Sync'}\n    </button>\n  );\n};\n\nexport default SyncSwitch;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoTextInput from './TodoTextInput';\nimport SyncSwitch from './SyncSwitch';\n\nconst Header = ({ addTodo }) => (\n  <header className=\"header\">\n    <h1>todos</h1>\n    <small\n      style={{\n        position: 'absolute',\n        top: '-40px',\n        width: '100%',\n        textAlign: 'center',\n      }}\n    >\n      based on{' '}\n      <a href={'https://github.com/reduxjs/redux/tree/master/examples/todomvc'}>\n        https://github.com/reduxjs/redux/tree/master/examples/todomvc\n      </a>\n    </small>\n    <SyncSwitch />\n    <TodoTextInput\n      newTodo\n      onSave={(text) => {\n        if (text.length !== 0) {\n          addTodo(text);\n        }\n      }}\n      placeholder=\"What needs to be done?\"\n    />\n  </header>\n);\n\nHeader.propTypes = {\n  addTodo: PropTypes.func.isRequired,\n};\n\nexport default Header;\n","export const ADD_TODO = 'ADD_TODO';\nexport const DELETE_TODO = 'DELETE_TODO';\nexport const EDIT_TODO = 'EDIT_TODO';\nexport const COMPLETE_TODO = 'COMPLETE_TODO';\nexport const COMPLETE_ALL_TODOS = 'COMPLETE_ALL_TODOS';\nexport const CLEAR_COMPLETED = 'CLEAR_COMPLETED';\nexport const SET_VISIBILITY_FILTER = 'SET_VISIBILITY_FILTER';\n","import * as types from '../constants/ActionTypes';\n\nexport const addTodo = (text) => ({ type: types.ADD_TODO, text });\nexport const deleteTodo = (id) => ({ type: types.DELETE_TODO, id });\nexport const editTodo = (id, text) => ({ type: types.EDIT_TODO, id, text });\nexport const completeTodo = (id) => ({ type: types.COMPLETE_TODO, id });\nexport const completeAllTodos = () => ({ type: types.COMPLETE_ALL_TODOS });\nexport const clearCompleted = () => ({ type: types.CLEAR_COMPLETED });\nexport const setVisibilityFilter = (filter) => ({ type: types.SET_VISIBILITY_FILTER, filter });\n","import { connect } from 'react-redux';\nimport Header from '../components/Header';\nimport { addTodo } from '../actions';\n\nexport default connect(null, { addTodo })(Header);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst Link = ({ active, children, setFilter }) => (\n  // eslint-disable jsx-a11y/anchor-is-valid\n  <a\n    className={classnames({ selected: active })}\n    style={{ cursor: 'pointer' }}\n    onClick={() => setFilter()}\n  >\n    {children}\n  </a>\n);\n\nLink.propTypes = {\n  active: PropTypes.bool.isRequired,\n  children: PropTypes.node.isRequired,\n  setFilter: PropTypes.func.isRequired,\n};\n\nexport default Link;\n","import { connect } from 'react-redux';\nimport { setVisibilityFilter } from '../actions';\nimport Link from '../components/Link';\n\nconst mapStateToProps = (state, ownProps) => ({\n  active: ownProps.filter === state.visibilityFilter,\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  setFilter: () => {\n    dispatch(setVisibilityFilter(ownProps.filter));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Link);\n","export const SHOW_ALL = 'show_all';\nexport const SHOW_COMPLETED = 'show_completed';\nexport const SHOW_ACTIVE = 'show_active';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FilterLink from '../containers/FilterLink';\nimport { SHOW_ALL, SHOW_COMPLETED, SHOW_ACTIVE } from '../constants/TodoFilters';\n\nconst FILTER_TITLES = {\n  [SHOW_ALL]: 'All',\n  [SHOW_ACTIVE]: 'Active',\n  [SHOW_COMPLETED]: 'Completed',\n};\n\nconst Footer = (props) => {\n  const { activeCount, completedCount, onClearCompleted } = props;\n  const itemWord = activeCount === 1 ? 'item' : 'items';\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        <strong>{activeCount || 'No'}</strong> {itemWord} left\n      </span>\n      <ul className=\"filters\">\n        {Object.keys(FILTER_TITLES).map((filter) => (\n          <li key={filter}>\n            <FilterLink filter={filter}>{FILTER_TITLES[filter]}</FilterLink>\n          </li>\n        ))}\n      </ul>\n      {!!completedCount && (\n        <button className=\"clear-completed\" onClick={onClearCompleted}>\n          Clear completed\n        </button>\n      )}\n    </footer>\n  );\n};\n\nFooter.propTypes = {\n  completedCount: PropTypes.number.isRequired,\n  activeCount: PropTypes.number.isRequired,\n  onClearCompleted: PropTypes.func.isRequired,\n};\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport TodoTextInput from './TodoTextInput';\n\nexport default class TodoItem extends Component {\n  static propTypes = {\n    todo: PropTypes.object.isRequired,\n    editTodo: PropTypes.func.isRequired,\n    deleteTodo: PropTypes.func.isRequired,\n    completeTodo: PropTypes.func.isRequired,\n  };\n\n  state = {\n    editing: false,\n  };\n\n  handleDoubleClick = () => {\n    this.setState({ editing: true });\n  };\n\n  handleSave = (id, text) => {\n    if (text.length === 0) {\n      this.props.deleteTodo(id);\n    } else {\n      this.props.editTodo(id, text);\n    }\n    this.setState({ editing: false });\n  };\n\n  render() {\n    const { todo, completeTodo, deleteTodo } = this.props;\n\n    let element;\n    if (this.state.editing) {\n      element = (\n        <TodoTextInput\n          text={todo.text}\n          editing={this.state.editing}\n          onSave={(text) => this.handleSave(todo.id, text)}\n        />\n      );\n    } else {\n      element = (\n        <div className=\"view\">\n          <input\n            className=\"toggle\"\n            type=\"checkbox\"\n            checked={todo.completed}\n            onChange={() => completeTodo(todo.id)}\n          />\n          <label onDoubleClick={this.handleDoubleClick}>{todo.text}</label>\n          <button className=\"destroy\" onClick={() => deleteTodo(todo.id)} />\n        </div>\n      );\n    }\n\n    return (\n      <li\n        className={classnames({\n          completed: todo.completed,\n          editing: this.state.editing,\n        })}\n      >\n        {element}\n      </li>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nconst TodoList = ({ filteredTodos, actions }) => (\n  <ul className=\"todo-list\">\n    {filteredTodos\n      .sort((a, b) => a.createdAt - b.createdAt)\n      .map((todo) => (\n        <TodoItem key={todo.id} todo={todo} {...actions} />\n      ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  filteredTodos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      completed: PropTypes.bool.isRequired,\n      text: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n  actions: PropTypes.object.isRequired,\n};\n\nexport default TodoList;\n","import { createSelector } from 'reselect';\nimport { SHOW_ALL, SHOW_COMPLETED, SHOW_ACTIVE } from '../constants/TodoFilters';\n\nconst getVisibilityFilter = (state) => state.visibilityFilter;\nconst getTodos = (state) => Object.values(state.todos);\n\nexport const getVisibleTodos = createSelector(\n  [getVisibilityFilter, getTodos],\n  (visibilityFilter, todos) => {\n    switch (visibilityFilter) {\n      case SHOW_ALL:\n        return todos;\n      case SHOW_COMPLETED:\n        return todos.filter((t) => t.completed);\n      case SHOW_ACTIVE:\n        return todos.filter((t) => !t.completed);\n      default:\n        throw new Error('Unknown filter: ' + visibilityFilter);\n    }\n  }\n);\n\nexport const getCompletedTodoCount = createSelector([getTodos], (todos) =>\n  todos.reduce((count, todo) => (todo.completed ? count + 1 : count), 0)\n);\n","import { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as TodoActions from '../actions';\nimport TodoList from '../components/TodoList';\nimport { getVisibleTodos } from '../selectors';\n\nconst mapStateToProps = (state) => ({\n  filteredTodos: getVisibleTodos(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  actions: bindActionCreators(TodoActions, dispatch),\n});\n\nconst VisibleTodoList = connect(mapStateToProps, mapDispatchToProps)(TodoList);\n\nexport default VisibleTodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Footer from './Footer';\nimport VisibleTodoList from '../containers/VisibleTodoList';\n\nconst MainSection = ({ todosCount, completedCount, actions }) => (\n  <section className=\"main\">\n    {!!todosCount && (\n      <span>\n        <input\n          className=\"toggle-all\"\n          type=\"checkbox\"\n          checked={completedCount === todosCount}\n          readOnly\n        />\n        <label onClick={actions.completeAllTodos} />\n      </span>\n    )}\n    <VisibleTodoList />\n    {!!todosCount && (\n      <Footer\n        completedCount={completedCount}\n        activeCount={todosCount - completedCount}\n        onClearCompleted={actions.clearCompleted}\n      />\n    )}\n  </section>\n);\n\nMainSection.propTypes = {\n  todosCount: PropTypes.number.isRequired,\n  completedCount: PropTypes.number.isRequired,\n  actions: PropTypes.object.isRequired,\n};\n\nexport default MainSection;\n","import { connect } from 'react-redux';\nimport * as TodoActions from '../actions';\nimport { bindActionCreators } from 'redux';\nimport MainSection from '../components/MainSection';\nimport { getCompletedTodoCount } from '../selectors';\n\nconst mapStateToProps = (state) => ({\n  todosCount: Object.keys(state.todos).length,\n  completedCount: getCompletedTodoCount(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  actions: bindActionCreators(TodoActions, dispatch),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainSection);\n","import React from 'react';\nimport Header from '../containers/Header';\nimport MainSection from '../containers/MainSection';\n\nconst App = () => (\n  <div>\n    <Header />\n    <MainSection />\n  </div>\n);\n\nexport default App;\n","import {\n  ADD_TODO,\n  DELETE_TODO,\n  EDIT_TODO,\n  COMPLETE_TODO,\n  COMPLETE_ALL_TODOS,\n  CLEAR_COMPLETED,\n} from '../constants/ActionTypes';\nimport { v4 as uuid } from 'uuid';\n\nconst initialState = {\n  initialTodo: {\n    id: 'initialTodo',\n    text: 'Use Redux',\n    completed: false,\n    createdAt: 1404000000000,\n  },\n};\n\nexport default function todos(state = initialState, action) {\n  switch (action.type) {\n    case ADD_TODO: {\n      const id = uuid();\n      return {\n        ...state,\n        [id]: {\n          id,\n          createdAt: new Date().getTime(),\n          completed: false,\n          text: action.text,\n        },\n      };\n    }\n\n    case DELETE_TODO: {\n      const { [action.id]: _, ...rest } = state;\n      return rest;\n    }\n\n    case EDIT_TODO: {\n      const todo = state[action.id];\n\n      return {\n        ...state,\n        [action.id]: { ...todo, text: action.text },\n      };\n    }\n\n    case COMPLETE_TODO: {\n      const todo = state[action.id];\n\n      return {\n        ...state,\n        [action.id]: { ...todo, completed: !todo.completed },\n      };\n    }\n\n    case COMPLETE_ALL_TODOS: {\n      const areAllMarked = Object.values(state).every((todo) => todo.completed);\n\n      return Object.fromEntries(\n        Object.entries(state).map(([id, todo]) => {\n          return [id, { ...todo, completed: !areAllMarked }];\n        })\n      );\n    }\n\n    case CLEAR_COMPLETED: {\n      return Object.fromEntries(\n        Object.entries(state).filter(([, todo]) => todo.completed === false)\n      );\n    }\n\n    default:\n      return state;\n  }\n}\n","import { SET_VISIBILITY_FILTER } from '../constants/ActionTypes';\nimport { SHOW_ALL } from '../constants/TodoFilters';\n\nconst visibilityFilter = (state = SHOW_ALL, action) => {\n  switch (action.type) {\n    case SET_VISIBILITY_FILTER:\n      return action.filter;\n    default:\n      return state;\n  }\n};\n\nexport default visibilityFilter;\n","// The types exported by recursive-diff are not always correct (e.g. path is actually optional).\n\nexport enum RecursiveDiffResultOperation {\n  Add = 'add',\n  Update = 'update',\n  Delete = 'delete',\n}\n\nexport interface RecursiveDiffResultAdd {\n  op: RecursiveDiffResultOperation.Add;\n  path?: Array<string | number>;\n  val: unknown;\n}\n\nexport interface RecursiveDiffResultUpdate {\n  op: RecursiveDiffResultOperation.Update;\n  path?: Array<string | number>;\n  val: unknown;\n}\n\nexport interface RecursiveDiffResultDelete {\n  op: RecursiveDiffResultOperation.Delete;\n  path?: Array<string | number>;\n  val: undefined;\n}\n\nexport type RecursiveDiffResult = Array<\n  RecursiveDiffResultAdd | RecursiveDiffResultUpdate | RecursiveDiffResultDelete\n>;\n","export const clamp = (v: number, l: number, u: number) => (v < l ? l : v > u ? u : v);\n\nexport const isObject = (val: unknown): val is Record<string, unknown> =>\n  Object.prototype.toString.call(val) === '[object Object]';\n\nexport const isArray = (val: unknown): val is Array<unknown> => Array.isArray(val);\n\nexport const isString = (val: unknown): val is string =>\n  typeof val === 'string' || val instanceof String;\n\nexport const isInteger = (val: unknown): val is number => Number.isInteger(val);\n","import { Map as YMap, Array as YArray } from 'yjs';\nimport { isArray, isObject } from './utils';\n\n/** @desc Recursively transforms arrays and maps into their respective Yjs class. */\nexport const toSharedType = <Value = unknown>(val: Value) => {\n  if (isArray(val)) {\n    const yArray = new YArray();\n\n    const yValues = val.map((v) => toSharedType(v));\n    yArray.push(yValues); // yArray.push takes an array of values.\n\n    return yArray;\n  } else if (isObject(val)) {\n    const yMap = new YMap();\n\n    Object.entries(val).forEach(([key, v]) => {\n      yMap.set(key, toSharedType(v));\n    });\n\n    return yMap;\n  } else {\n    return val;\n  }\n};\n","import { Map as YMap, Array as YArray } from 'yjs';\nimport { getDiff } from 'recursive-diff';\nimport { clamp, isInteger, isString } from './utils';\nimport { toSharedType } from './toSharedType';\nimport { RecursiveDiffResult, RecursiveDiffResultOperation } from './recursive-diff.types';\n\n/** @desc Handles the operation from recursive-diff to patch the given yType */\nconst patchYType = (\n  yType: YMap<unknown> | YArray<unknown>,\n  operation: RecursiveDiffResultOperation,\n  property: string | number, // Either the Map key or Array index\n  value: unknown\n) => {\n  if (\n    operation === RecursiveDiffResultOperation.Add ||\n    operation === RecursiveDiffResultOperation.Update\n  ) {\n    const yValue = toSharedType(value);\n\n    if (yType instanceof YArray && isInteger(property)) {\n      if (operation === RecursiveDiffResultOperation.Update) yType.delete(property);\n\n      yType.insert(property, [yValue]);\n    } else if (yType instanceof YMap && isString(property)) {\n      yType.set(property, yValue);\n    } else {\n      throw new Error('Unsupported YAbstractType or property type did not match.');\n    }\n  } else if (operation === RecursiveDiffResultOperation.Delete) {\n    if (yType instanceof YArray && isInteger(property)) {\n      // This actually only works because the \"recursive-diff\" cancels inserts and deletions out into update operations\n      // [1, 2, 3] => [3] into [{op: 'update', index: 0, val: 3}, {op: 'del', index: 1}, {op: 'del', index: 2}]\n      // Therefore delete or insert operations are always last (never both, since that would be represented as an update).\n      // A more sophisticated solution would group deletions together to a single operation.\n      const clampedIndex = clamp(property, 0, yType.length - 1);\n      yType.delete(clampedIndex);\n    } else if (yType instanceof YMap && isString(property)) {\n      yType.delete(property);\n    } else {\n      throw new Error('Unsupported YAbstractType or property type did not match.');\n    }\n  }\n};\n\n/** @desc Recursively walk through path array until its length is one, at which point it performs the appropriate operation on the remaining property in the path. */\nconst traversePath = (\n  yType: YMap<unknown> | YArray<unknown>,\n  operation: RecursiveDiffResultOperation,\n  path: Array<string | number>,\n  value: unknown\n) => {\n  if (path.length === 0) {\n    throw new Error('Cannot traverse 0 length path.');\n  }\n\n  if (path.length === 1) {\n    patchYType(yType, operation, path[0], value);\n  } else {\n    const [currentSegment, ...restPath] = path;\n\n    if (yType instanceof YArray) {\n      if (!isInteger(currentSegment)) {\n        throw new Error('States diverged.');\n      }\n\n      const nextType = yType.get(currentSegment);\n\n      // NextType must also be an array or map because path.length >= 2.\n      if (!(nextType instanceof YMap || nextType instanceof YArray)) {\n        throw new Error('States diverged.');\n      }\n\n      traversePath(nextType, operation, restPath, value);\n    } else if (yType instanceof YMap) {\n      if (!isString(currentSegment)) {\n        throw new Error('States diverged.');\n      }\n\n      const nextType = yType.get(currentSegment);\n\n      // NextType must also be an array or map because path.length >= 2.\n      if (!(nextType instanceof YMap || nextType instanceof YArray)) {\n        throw new Error('States diverged.');\n      }\n\n      traversePath(nextType, operation, restPath, value);\n    } else {\n      console.warn('Encountered unsupported yType. Received:', yType);\n    }\n  }\n};\n\n/**\n * @desc Takes a rootMap that holds the values at the given sliceName. Then compares the old and new state to find the difference and apply that to the slice in the rootMap.\n * @param rootMap The yMap that holds the values to all slices.\n * @param sliceName Property name that contains the values on the rootMap.\n * @param a The old value.\n * @param b The new value.\n * */\nexport const patchYjs = (rootMap: YMap<unknown>, sliceName: string, a: unknown, b: unknown) => {\n  // Types of getDiff are inaccurate\n  const diff = getDiff(a, b) as RecursiveDiffResult;\n\n  // Applying diff in reverse to avoid problems when removing more than one item from an array,\n  // where the index of the item that should be removed moves after a previous one was removed.\n  // F.e.: diff(1[, 2], []) returns [{op: 'del', idx: 0}, {op: 'del', idx: 1}] but by the time\n  // we try to remove the second element, the array only has a length of 1. Thus index 1 would\n  // be out of bounds. Deleting from right to left circumvents this problem, while introducing\n  // it again but for insertions. To solve this problem, items should be inserted from left to\n  // right but removed right to left. A workaround exists inside the patchYType function, that\n  // simply clamps the accessed index to the length of the array. The method is limited to the\n  // recursive-diff algorithm though.\n  // diff.reverse(); // Won't work for multiple consecutive insertions.\n\n  diff.forEach(({ op, path, val }) => {\n    // \"path\" is undefined if a or b are primitive values.\n    traversePath(rootMap, op, [sliceName, ...(path || [])], val);\n  });\n};\n","import { combineReducers } from 'redux';\nimport todos from './todos';\nimport visibilityFilter from './visibilityFilter';\nimport { enhanceReducer } from 'redux-yjs-bindings';\n\nconst rootReducer = combineReducers({\n  todos: enhanceReducer(todos),\n  visibilityFilter,\n});\n\nexport default rootReducer;\n","import { Doc as YDoc, transact } from 'yjs';\nimport { Reducer, Store } from 'redux';\nimport { patchStore, SET_STATE_FROM_YJS_ACTION } from './patchRedux';\nimport { toSharedType } from './toSharedType';\nimport { patchYjs } from './patchYjs';\nimport { isArray, isObject } from './utils';\n\nexport { SET_STATE_FROM_YJS_ACTION } from './patchRedux';\n\n/** @desc This is the name of the yMap that is used on the yDoc that passed to the setup function. Can be used to persist the values on a server. */\nexport const ROOT_MAP_NAME = '__ReduxYjsBindingsRootMap';\n\n/**\n * @desc Initialises the bindings and registers listeners on yjs and teh redux store.\n * @param yDoc The y-document that is used to sync with other peers.\n * @param store The redux store containing the values that should be synced.\n * @param sliceName The name of the redux-subtree (slice) that contains the values.\n * */\nexport const bind = <S extends { [P in keyof S]: S[P] }, K extends keyof S & string>(\n  yDoc: YDoc,\n  store: Store<S>,\n  sliceName: K\n) => {\n  const rootMap = yDoc.getMap(ROOT_MAP_NAME);\n  const state = store.getState()[sliceName];\n\n  // Set initial values from store, while preventing overriding remote states.\n  if (isObject(state)) {\n    transact(yDoc, () => {\n      rootMap.set(sliceName, toSharedType({}));\n      patchYjs(rootMap, sliceName, {}, state);\n    });\n  }\n\n  if (isArray(state)) {\n    transact(yDoc, () => {\n      rootMap.set(sliceName, toSharedType([]));\n      patchYjs(rootMap, sliceName, [], state);\n    });\n  }\n\n  // Prevent reacting to our own changes.\n  let currentlyPatchingYjs = false;\n  let currentlyPatchingStore = false;\n\n  let currentState = store.getState()[sliceName];\n  const reduxUnsubscribe = store.subscribe(() => {\n    const prevState = currentState;\n    currentState = store.getState()[sliceName];\n\n    if (currentlyPatchingStore) return;\n\n    currentlyPatchingYjs = true;\n    transact(yDoc, () => {\n      patchYjs(rootMap, sliceName, prevState, currentState);\n    });\n    currentlyPatchingYjs = false;\n  });\n\n  const handleYjsStoreChange = () => {\n    if (currentlyPatchingYjs) return;\n\n    currentlyPatchingStore = true;\n    patchStore(store, rootMap, sliceName);\n    currentlyPatchingStore = false;\n  }\n\n  rootMap.observeDeep(handleYjsStoreChange);\n\n  return () => {\n    reduxUnsubscribe()\n    rootMap.unobserveDeep(handleYjsStoreChange)\n  }\n};\n\n/** @desc This is a utility function to enhance an existing reducer to react to the actions dispatched that are meant to set the state of the redux slice on incoming changes from yjs. */\nexport const enhanceReducer =\n  <S>(currentReducer: Reducer<S>): Reducer<S> =>\n  (state, action) => {\n    if (action?.type === SET_STATE_FROM_YJS_ACTION) {\n      return action.payload === undefined ? state : action.payload;\n    } else {\n      return currentReducer(state, action);\n    }\n  };\n","import { Map as YMap } from 'yjs';\nimport { Store } from 'redux';\n\n/** @desc Action type that is dispatched when yjs state changes from other peers come in. */\nexport const SET_STATE_FROM_YJS_ACTION = 'YJS_INCOMING_CHANGES';\n\nexport const setStateAction = (newState: unknown) => ({\n  type: SET_STATE_FROM_YJS_ACTION,\n  payload: newState,\n});\n\nexport const patchStore = (store: Store, rootMap: YMap<unknown>, sliceName: string) => {\n  store.dispatch(setStateAction(rootMap.toJSON()[sliceName]));\n};\n","import { WebrtcProvider } from 'y-webrtc';\n\nexport class RTC {\n  yDoc;\n  connected = false;\n\n  constructor(yDoc) {\n    this.yDoc = yDoc;\n\n    const syncEnabled = window.localStorage.getItem('rtcSyncEnabled');\n    if (syncEnabled !== 'false') {\n      this.connect();\n    }\n  }\n\n  connect() {\n    if (this.provider) {\n      this.provider.connect();\n    } else {\n      // clients connected to the same room-name share document updates\n      this.provider = new WebrtcProvider('redux-yjs-bindings', this.yDoc, {\n        signaling:\n          process.env.NODE_ENV === 'development'\n            ? ['ws://localhost:4444']\n            : ['wss://signaling.yjs.dev', 'wss://y-webrtc-signaling-eu.herokuapp.com'],\n      });\n    }\n\n    window.localStorage.setItem('rtcSyncEnabled', 'true');\n    this.connected = true;\n  }\n\n  disconnect() {\n    if (this.provider) {\n      this.provider.disconnect();\n    }\n\n    window.localStorage.setItem('rtcSyncEnabled', 'false');\n    this.connected = false;\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport reducer from './reducers';\nimport 'todomvc-app-css/index.css';\nimport { Doc as YDoc } from 'yjs';\nimport { bind } from 'redux-yjs-bindings';\nimport { RTC } from './YjsWebRTCProvider';\n\nexport const yDoc = new YDoc();\nexport const rtc = new RTC(yDoc);\n\nconst store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__?.());\n\nbind(yDoc, store, 'todos');\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}